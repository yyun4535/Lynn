<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>


	<!-- Interceptor 객체 생성 -->
	<beans:bean id="Interceptor"
		class="com.human.main.Interceptor">
	</beans:bean>

	<!-- Interceptor 설정 -->
	<interceptors>
		<interceptor>
			<mapping path="/love/ProductInput" /><!-- *현재의 것만 **하위영역까지 다 -->
			<mapping path="/love/Product" />
			<mapping path="/love/NoticeInput" />
			<mapping path="/love/NoticeDetail" />
			<mapping path="/love/NoticeInput" />
			<mapping path="/love/Logout" />
			<beans:ref bean="Interceptor" />
		</interceptor>
	</interceptors>
	
			<!--Interceptor 제외 시키기 -->
			<!-- <exclude-mapping path="/love/*" /> -->


	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- maxUploadSize : 최대 업로드 가능한 바이트 크기 maxInMemorySize : 디스크에 임시 파일을 생성하기 
			전에 메모리에 보관할 수 있는 최대 바이트 크기 defaultEncoding : 요청을 파싱할 때 사용할 캐릭터 인코딩. 기본값 ISO-8859-1 -->
		<beans:property name="maxUploadSize" value="10485760" /><!-- 
			최대 업로드 사이즈 10MB -->
	</beans:bean>


	<context:component-scan
		base-package="com.human.main" />


</beans:beans>

